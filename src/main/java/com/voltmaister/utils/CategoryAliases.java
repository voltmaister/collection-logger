package com.voltmaister.utils;

import java.util.Map;

public class CategoryAliases {
    public static final Map<String, String> CATEGORY_ALIASES = Map.ofEntries(

            // === Bosses ===
            Map.entry("armadyl", "kree_arra"),
            Map.entry("kree", "kree_arra"),
            Map.entry("arma", "kree_arra"),
            Map.entry("archaeologist", "crazy_archaeologist"),
            Map.entry("crazy", "crazy_archaeologist"),
            Map.entry("barrows", "barrows_chests"),
            Map.entry("artio", "callisto_and_artio"),
            Map.entry("callisto", "callisto_and_artio"),
            Map.entry("vetion", "vetion_and_calvarion"),
            Map.entry("calvarion", "vetion_and_calvarion"),
            Map.entry("calv", "vetion_and_calvarion"),
            Map.entry("vet", "vetion_and_calvarion"),
            Map.entry("corp", "corporeal_beast"),
            Map.entry("corporeal", "corporeal_beast"),
            Map.entry("dagannoth", "dagannoth_kings"),
            Map.entry("dk", "dagannoth_kings"),
            Map.entry("dks", "dagannoth_kings"),
            Map.entry("duke", "duke_sucellus"),
            Map.entry("sucellus", "duke_sucellus"),
            Map.entry("elemental", "chaos_elemental"),
            Map.entry("fanatic", "chaos_fanatic"),
            Map.entry("graardor", "general_graardor"),
            Map.entry("bandos", "general_graardor"),
            Map.entry("grotesque", "grotesque_guardians"),
            Map.entry("gg", "grotesque_guardians"),
            Map.entry("ggs", "grotesque_guardians"),
            Map.entry("hydra", "alchemical_hydra"),
            Map.entry("alchemical" , "alchemical_hydra"),
            Map.entry("kbd", "king_black_dragon"),
            Map.entry("kalphite", "kalphite_queen"),
            Map.entry("kril", "kril_tsutsaroth"),
            Map.entry("zammy", "kril_tsutsaroth"),
            Map.entry("zamorak", "kril_tsutsaroth"),
            Map.entry("leviathan", "the_leviathan"),
            Map.entry("levi", "the_leviathan"),
            Map.entry("mole", "giant_mole"),
            Map.entry("moons", "moons_of_peril"),
            Map.entry("muspah", "phantom_muspah"),
            Map.entry("nightmare", "the_nightmare"),
            Map.entry("phosani", "the_nightmare"),
            Map.entry("phn", "the_nightmare"),
            Map.entry("sire", "abyssal_sire"),
            Map.entry("spindel", "venenatis_and_spindel"),
            Map.entry("venenatis", "venenatis_and_spindel"),
            Map.entry("thermonuclear", "thermonuclear_smoke_devil"),
            Map.entry("thermy", "thermonuclear_smoke_devil"),
            Map.entry("titans", "royal_titans"),
            Map.entry("royal", "royal_titans"),
            Map.entry("rt", "royal_titans"),
            Map.entry("tormented", "tormented_demons"),
            Map.entry("tds", "tormented_demons"),
            Map.entry("whisperer", "the_whisperer"),
            Map.entry("whisp", "the_whisperer"),
            Map.entry("zilyana", "commander_zilyana"),
            Map.entry("sara", "commander_zilyana"),
            Map.entry("zily" , "commander_zilyana"),
            Map.entry("saradomin" , "commander_zilyana"),
            Map.entry("amox", "amoxliatl"),
            Map.entry("vork", "vorkath"),
            Map.entry("huey", "hueycoatl"),
            Map.entry("vard", "vardorvis"),
            Map.entry("zul", "zulrah"),

            // === Clue Scrolls ===
            Map.entry("beginner_clue", "beginner_treasure_trails"),
            Map.entry("easy_clue", "easy_treasure_trails"),
            Map.entry("elite_clue", "elite_treasure_trails"),
            Map.entry("hard_clue", "hard_treasure_trails"),
            Map.entry("master_clue", "master_treasure_trails"),
            Map.entry("medium_clue", "medium_treasure_trails"),
            Map.entry("shared_clue", "shared_treasure_trail_rewards"),
            Map.entry("beginner", "beginner_treasure_trails"),
            Map.entry("easy", "easy_treasure_trails"),
            Map.entry("medium", "medium_treasure_trails"),
            Map.entry("hard", "hard_treasure_trails"),
            Map.entry("elite", "elite_treasure_trails"),
            Map.entry("master", "master_treasure_trails"),
            Map.entry("shared", "shared_treasure_trail_rewards"),


            // === Minigames & Activities ===
            Map.entry("aerial", "aerial_fishing"),
            Map.entry("champions", "champions_challenge"),
            Map.entry("chompy", "chompy_bird_hunting"),
            Map.entry("creature", "creature_creation"),
            Map.entry("den", "rogues_den"),
            Map.entry("druids", "chaos_druids"),
            Map.entry("events", "random_events"),
            Map.entry("experiment", "gloughs_experiments"),
            Map.entry("glough", "gloughs_experiments"),
            Map.entry("fossil", "fossil_island_notes"),
            Map.entry("gotr", "guardians_of_the_rift"),
            Map.entry("rift", "guardians_of_the_rift"),
            Map.entry("hunter", "hunter_guild"),
            Map.entry("lms", "last_man_standing"),
            Map.entry("mixology", "mastering_mixology"),
            Map.entry("mlm", "motherlode_mine"),
            Map.entry("monkey", "monkey_backpacks"),
            Map.entry("notes", "my_notes"),
            Map.entry("pest", "pest_control"),
            Map.entry("revs", "revenants"),
            Map.entry("rev", "revenants"),
            Map.entry("rooftop", "rooftop_agility"),
            Map.entry("sepulchre", "hallowed_sepulchre"),
            Map.entry("hs", "hallowed_sepulchre"),
            Map.entry("shades", "shades_of_mortton"),
            Map.entry("shayzien", "shayzien_armour"),
            Map.entry("stars", "shooting_stars"),
            Map.entry("trekking", "temple_trekking"),
            Map.entry("tithe", "tithe_farm"),
            Map.entry("brewing", "trouble_brewing"),
            Map.entry("trouble", "trouble_brewing"),
            Map.entry("tb", "trouble_brewing"),
            Map.entry("volcanic", "volcanic_mine"),
            Map.entry("wyrm", "colossal_wyrm_agility"),
            Map.entry("ba", "barbarian_assault"),
            Map.entry("assault", "barbarian_assault"),
            Map.entry("barbarian", "barbarian_assault"),
            Map.entry("brimhaven", "brimhaven_agility_arena"),
            Map.entry("trawler", "fishing_trawler"),
            Map.entry("wars", "castle_wars"),

            // === Miscellaneous ===
            Map.entry("3rd", "third_age"),
            Map.entry("misc", "miscellaneous"),
            Map.entry("pets", "all_pets"),
            Map.entry("skilling", "skilling_pets"),

            // === Raids & Endgame ===
            Map.entry("cg", "the_gauntlet"),
            Map.entry("gauntlet", "the_gauntlet"),
            Map.entry("colosseum", "fortis_colosseum"),
            Map.entry("colo", "fortis_colosseum"),
            Map.entry("cox", "chambers_of_xeric"),
            Map.entry("chambers", "chambers_of_xeric"),
            Map.entry("fightcaves", "the_fight_caves"),
            Map.entry("jad", "the_fight_caves"),
            Map.entry("foundry", "giants_foundry"),
            Map.entry("homes", "mahogany_homes"),
            Map.entry("mahogany", "mahogany_homes"),
            Map.entry("inferno", "the_inferno"),
            Map.entry("zuk", "the_inferno"),
            Map.entry("mta", "magic_training_arena"),
            Map.entry("restaurant", "gnome_restaurant"),
            Map.entry("toa", "tombs_of_amascut"),
            Map.entry("tombs", "tombs_of_amascut"),
            Map.entry("tob", "theatre_of_blood"),
            Map.entry("theatre", "theatre_of_blood")
    );
}
